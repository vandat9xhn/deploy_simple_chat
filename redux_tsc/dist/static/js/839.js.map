{"version":3,"sources":["webpack://redux_tsc/./src/_icons/eye_pass/IconEyePass.tsx","webpack://redux_tsc/./src/_utils/makeFormData.ts","webpack://redux_tsc/./src/components/fetching/three_dot/FetchingThreeDot.tsx","webpack://redux_tsc/./src/components/input/valid/_main/InputValid.tsx","webpack://redux_tsc/./src/components/input/common/pass/InputPass.tsx","webpack://redux_tsc/./src/components/input/valid/password/InputValidPass.tsx","webpack://redux_tsc/./src/components/input/valid/text/InputValidText.tsx","webpack://redux_tsc/./src/components/input/picture/InputPicture.tsx","webpack://redux_tsc/./src/pages/register/_initial/RegisterInitial.ts","webpack://redux_tsc/./src/pages/register/_main/Register.tsx"],"names":["IconEye","size_icon","close_eye","className","height","width","viewBox","stroke","fill","strokeLinecap","d","strokeWidth","cx","cy","r","x1","y1","x2","y2","makeFormData","data","formData","FormData","key","Array","isArray","item","append","FetchingThreeDot","is_fetching","InputValid","label","help","error","children","InputPass","input_props","React","type","setType","onClick","InputValidPass","InputValidText","InputPicture","title","picture","handleChangePicture","ref_input","useRef","current","click","src","alt","ref","accept","onChange","register_initial_arr","name","placeholder","max_length","schemaRegister","yup","shape","username","matches","password","confirm_password","oneOf","email","first_name","min","max","last_name","Register","props","useForm","resolver","yupResolver","register","errors","formState","handleSubmit","use_history","useHistory","setDataUser","context_api","useState","file","touched_picture","register_state","setRegisterState","console","log","registerRequest","res","replace","alert","autoComplete","onSubmit","map","ix","message","e","new_file","target","files","reader","FileReader","onload","result","readAsDataURL","Object","keys","length"],"mappings":"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","file":"static/js/839.js","sourcesContent":["import * as React from 'react';\r\n\r\n// import './IconsEye.scss';\r\n\r\nexport interface IIconsEyePops {\r\n    size_icon?: string;\r\n    close_eye: boolean;\r\n}\r\n\r\n//\r\nexport default function IconEye({\r\n    size_icon = '1.5rem',\r\n    close_eye,\r\n}: IIconsEyePops) {\r\n    //\r\n    return (\r\n        <svg\r\n            className=\"IconEye\"\r\n            height={size_icon}\r\n            width={size_icon}\r\n            viewBox={`200 200 200 200`}\r\n            stroke=\"var(--black-brown)\"\r\n            fill=\"var(--black-brown)\"\r\n            strokeLinecap=\"round\"\r\n        >\r\n            {/* Eye for showing password x=200 y=200 Toggle:close_eye */}\r\n            <path\r\n                d=\"M200,300 Q300,200 400,300 Q300,400 200,300\"\r\n                fill=\"none\"\r\n                strokeWidth=\"10\"\r\n            />\r\n            <circle\r\n                className={close_eye ? 'display-none' : ''}\r\n                cx=\"300\"\r\n                cy=\"300\"\r\n                r=\"30\"\r\n            />\r\n            <g className={close_eye ? '' : 'display-none'}>\r\n                <path\r\n                    d=\"M200,300 Q300,350 400,300\"\r\n                    fill=\"none\"\r\n                    strokeWidth=\"20\"\r\n                />\r\n                <line x1=\"210\" y1=\"210\" x2=\"390\" y2=\"390\" strokeWidth=\"30\" />\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n","//\r\nexport function makeFormData(data: any) {\r\n    const formData = new FormData();\r\n\r\n    for (const key in data) {\r\n        if (Array.isArray(data[key])) {\r\n            for (const item of data[key]) {\r\n                formData.append(key, item);\r\n            }\r\n        } else {\r\n            formData.append(key, data[key]);\r\n        }\r\n    }\r\n\r\n    return formData;\r\n}\r\n","import * as React from 'react';\r\n//\r\nimport './FetchingThreeDot.scss';\r\n\r\n// \r\nexport interface IFetchingThreeDotProps {\r\n    is_fetching: boolean;\r\n}\r\n\r\n// \r\nexport default function FetchingThreeDot({\r\n    is_fetching = false,\r\n}: IFetchingThreeDotProps) {\r\n    // \r\n    return (\r\n        <div\r\n            className={\r\n                is_fetching ? 'FetchingThreeDot display-flex' : 'display-none'\r\n            }\r\n        >\r\n            <div className=\"FetchingThreeDot_item\" />\r\n            <div className=\"FetchingThreeDot_item\" />\r\n            <div className=\"FetchingThreeDot_item\" />\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\n//\r\nexport interface IInputValidProps_C {\r\n    label: string;\r\n    help: string;\r\n    error: string;\r\n}\r\n\r\n//\r\ninterface IInputValidProps extends IInputValidProps_C {\r\n    children: React.ReactElement;\r\n}\r\n\r\n//\r\nexport default function InputValid({\r\n    label,\r\n    help,\r\n    error,\r\n    children,\r\n}: IInputValidProps) {\r\n    //\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label className=\"label-field\">{label}</label>\r\n            </div>\r\n\r\n            <div>\r\n                <div>{children}</div>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"text-warning font-12px font-italic\">{help}</div>\r\n            </div>\r\n\r\n            <div>\r\n                <div className=\"text-red font-12px font-italic\">{error}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n//\r\nimport IconEye from '../../../../_icons/eye_pass/IconEyePass';\r\n//\r\nimport './InputPass.scss';\r\n\r\n//\r\nexport interface IInputPassProps {\r\n    input_props: React.InputHTMLAttributes<HTMLInputElement>;\r\n}\r\n\r\n//\r\nexport default function InputPass({ input_props }: IInputPassProps) {\r\n    //\r\n    const [type, setType] = React.useState('password');\r\n\r\n    //\r\n    function toggleType() {\r\n        setType(type == 'password' ? 'text' : 'password');\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"InputPass\">\r\n            <div>\r\n                <input\r\n                    className=\"input-valid w-100per padding-8px\"\r\n                    type={type}\r\n                    {...input_props}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"InputPass_eye\">\r\n                <div\r\n                    className=\"InputPass_eye-contain hv-opacity\"\r\n                    onClick={toggleType}\r\n                >\r\n                    <IconEye close_eye={type == 'password'} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport InputPass from '../../common/pass/InputPass';\r\n//\r\nimport InputValid, { IInputValidProps_C } from '../_main/InputValid';\r\n\r\n//\r\ninterface IInputValidPassProps extends IInputValidProps_C {\r\n    input_props: React.InputHTMLAttributes<HTMLInputElement>;\r\n}\r\n\r\n//\r\nexport default function InputValidPass({\r\n    label,\r\n    help,\r\n    error,\r\n    input_props,\r\n}: IInputValidPassProps) {\r\n    return (\r\n        <InputValid label={label} help={help} error={error}>\r\n            <InputPass input_props={input_props} />\r\n        </InputValid>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n//\r\nimport InputValid, { IInputValidProps_C } from '../_main/InputValid';\r\n\r\n//\r\ninterface IInputValidTextProps extends IInputValidProps_C {\r\n    input_props: React.InputHTMLAttributes<HTMLInputElement>;\r\n}\r\n\r\n//\r\nexport default function InputValidText({\r\n    label,\r\n    help,\r\n    error,\r\n    input_props,\r\n}: IInputValidTextProps) {\r\n    return (\r\n        <InputValid label={label} help={help} error={error}>\r\n            <input className=\"input-valid w-100per padding-8px\" {...input_props} />\r\n        </InputValid>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { useRef } from 'react';\r\n//\r\nimport './InputPicture.scss';\r\n\r\n//\r\nexport interface IInputPictureProps {\r\n    title: string;\r\n    picture: string;\r\n    handleChangePicture: React.ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\n//\r\nexport default function InputPicture({\r\n    title,\r\n    picture,\r\n    handleChangePicture,\r\n}: IInputPictureProps) {\r\n    //\r\n    const ref_input = useRef(null);\r\n\r\n    //\r\n    function handleClickInput() {\r\n        ref_input.current.click();\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div\r\n            className=\"position-rel wh-100 cursor-pointer\"\r\n            onClick={handleClickInput}\r\n        >\r\n            <div className=\"wh-100\">\r\n                <img className=\"wh-100 brs-5px object-fit-cover\" src={picture} alt=\"\" />\r\n            </div>\r\n\r\n            <div\r\n                className={`InputPicture_title pos-abs-center ${\r\n                    picture ? 'display-none' : ''\r\n                }`}\r\n            >\r\n                <h2 className=\"margin-0 font-16px text-align-center\">\r\n                    {title}\r\n                </h2>\r\n            </div>\r\n\r\n            <input\r\n                ref={ref_input}\r\n                className=\"display-none\"\r\n                type=\"file\"\r\n                accept=\"*/image\"\r\n                onChange={handleChangePicture}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import * as yup from 'yup';\r\n\r\n//\r\nexport type IFormRegister = {\r\n    username: string;\r\n    password: string;\r\n    confirm_password: string;\r\n    email: string;\r\n    first_name: string;\r\n    last_name: string;\r\n    // picture: string | any;\r\n};\r\n\r\n//\r\ntype _input_account_obj = {\r\n    label: string;\r\n    help: string;\r\n    name: keyof IFormRegister;\r\n    type: string;\r\n    max_length: number;\r\n    placeholder: string;\r\n};\r\n\r\n//\r\nexport const register_initial_arr: _input_account_obj[] = [\r\n    {\r\n        name: 'username',\r\n        type: 'text',\r\n        placeholder: 'username',\r\n        label: 'Username',\r\n        help: '5-15 letters and no space',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'password',\r\n        type: 'password',\r\n        placeholder: 'password',\r\n        label: 'Password',\r\n        help: '5-15 letters and no space',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'confirm_password',\r\n        type: 'password',\r\n        placeholder: 'confirm password',\r\n        label: 'Confirm Password',\r\n        help: 'Confirm your password',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'email',\r\n        type: 'email',\r\n        placeholder: 'email',\r\n        label: 'Email',\r\n        help: '**@gmail.com (do not use a real mail)',\r\n        max_length: 40,\r\n    },\r\n    {\r\n        name: 'first_name',\r\n        type: 'text',\r\n        placeholder: 'first name',\r\n        label: 'First name',\r\n        help: '2-20 letters and spaces',\r\n        max_length: 20,\r\n    },\r\n    {\r\n        name: 'last_name',\r\n        type: 'text',\r\n        placeholder: 'last name',\r\n        label: 'Last name',\r\n        help: '2-20 letters and spaces',\r\n        max_length: 20,\r\n    },\r\n];\r\n\r\n//\r\nexport const schemaRegister = yup.object().shape({\r\n    username: yup.string().matches(/^[a-z0-9A-Z]{5,15}$/, 'Invalid username'),\r\n    password: yup.string().matches(/^[a-z0-9A-Z]{5,15}$/, 'Invalid password'),\r\n    confirm_password: yup.string().oneOf([yup.ref('password'), null], 'Password is not match'),\r\n    email: yup\r\n        .string()\r\n        .email('Invalid email')\r\n        .matches(/^[a-z0-9A-Z]{3,15}@gmail\\.com$/, 'Invalid email'),\r\n    first_name: yup\r\n        .string()\r\n        .min(2, 'Invalid firs name')\r\n        .max(20, 'Invalid firs name'),\r\n    last_name: yup\r\n        .string()\r\n        .min(2, 'Invalid last name')\r\n        .max(20, 'Invalid last name'),\r\n});\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n//\r\nimport { context_api } from '../../../_context/ContextAPI';\r\n//\r\nimport { registerRequest } from '../../../_api/account/AccountAPI';\r\n//\r\nimport { makeFormData } from '../../../_utils/makeFormData';\r\n//\r\nimport FetchingThreeDot from '../../../components/fetching/three_dot/FetchingThreeDot';\r\nimport InputValidText from '../../../components/input/valid/text/InputValidText';\r\nimport InputValidPass from '../../../components/input/valid/password/InputValidPass';\r\nimport InputPicture from '../../../components/input/picture/InputPicture';\r\n//\r\nimport {\r\n    IFormRegister,\r\n    register_initial_arr,\r\n    schemaRegister,\r\n} from '../_initial/RegisterInitial';\r\n//\r\nimport './Register.scss';\r\n\r\n//\r\nexport interface IRegisterProps {}\r\n\r\n//\r\nexport default function Register(props: IRegisterProps) {\r\n    //\r\n    const {\r\n        register,\r\n        formState: { errors },\r\n        handleSubmit,\r\n    } = useForm<IFormRegister>({\r\n        resolver: yupResolver(schemaRegister),\r\n    });\r\n\r\n    //\r\n    const use_history = useHistory();\r\n\r\n    //\r\n    const { setDataUser } = React.useContext(context_api);\r\n\r\n    //\r\n    const [register_state, setRegisterState] = useState({\r\n        file: null,\r\n        picture: null,\r\n        touched_picture: false,\r\n        is_fetching: false,\r\n    });\r\n\r\n    const { file, picture, touched_picture, is_fetching } = register_state;\r\n\r\n    //\r\n    function handleTouchPicture() {\r\n        setRegisterState({\r\n            ...register_state,\r\n            touched_picture: true,\r\n        });\r\n    }\r\n\r\n    //\r\n    function handleChangePicture(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const new_file = e.target.files[0];\r\n        if (new_file) {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                setRegisterState({\r\n                    ...register_state,\r\n                    file: new_file,\r\n                    picture: reader.result,\r\n                });\r\n            };\r\n\r\n            reader.readAsDataURL(new_file);\r\n        }\r\n    }\r\n\r\n    //\r\n    async function onSubmit(data: IFormRegister) {\r\n        console.log(data);\r\n\r\n        if (!file) {\r\n            !touched_picture &&\r\n                setRegisterState({\r\n                    ...register_state,\r\n                    touched_picture: true,\r\n                });\r\n\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setRegisterState({\r\n                ...register_state,\r\n                is_fetching: true,\r\n            });\r\n\r\n            const res = await registerRequest(\r\n                makeFormData({\r\n                    ...data,\r\n                    file,\r\n                })\r\n            );\r\n\r\n            if (res.data != 'wrong') {\r\n                setDataUser(res.data);\r\n                use_history.replace('/chat');\r\n            } else {\r\n                setRegisterState({\r\n                    ...register_state,\r\n                    is_fetching: false,\r\n                });\r\n\r\n                alert('Something is wrong, please, try again');\r\n            }\r\n        } catch (er) {\r\n            console.log(er);\r\n        }\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"Register\">\r\n            <form\r\n                className=\"Register_form margin-auto padding-8px bg-primary box-shadow-1 brs-5px-md\"\r\n                autoComplete=\"off\"\r\n                onSubmit={handleSubmit(onSubmit)}\r\n            >\r\n                <h2 className=\"margin-0 App_title\">Register</h2>\r\n\r\n                <div className=\"Register_input_list\">\r\n                    {register_initial_arr.map((item, ix) => (\r\n                        <div key={`${ix}`} className=\"Register_input\">\r\n                            {item.type == 'password' ? (\r\n                                <InputValidPass\r\n                                    label={item.label}\r\n                                    help={item.help}\r\n                                    error={errors[item.name]?.message}\r\n                                    input_props={{\r\n                                        ...register(item.name),\r\n                                        placeholder: item.placeholder,\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                <InputValidText\r\n                                    label={item.label}\r\n                                    help={item.help}\r\n                                    error={errors[item.name]?.message}\r\n                                    input_props={{\r\n                                        ...register(item.name),\r\n                                        placeholder: item.placeholder,\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <div>\r\n                    <h2 className=\"margin-0 font-16px\">Choose picture</h2>\r\n\r\n                    <div\r\n                        className=\"Register_file padding-8px\"\r\n                        onClick={handleTouchPicture}\r\n                    >\r\n                        <InputPicture\r\n                            title=\"Choose picture\"\r\n                            picture={picture}\r\n                            handleChangePicture={handleChangePicture}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"text-red font-12px font-italic\">\r\n                            {(Object.keys(errors).length || touched_picture) &&\r\n                            !file\r\n                                ? 'Picture is required'\r\n                                : ''}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n\r\n                <div>\r\n                    <button\r\n                        className=\"btn btn-hv w-100per padding-8px bg-green brs-5px\"\r\n                        type=\"submit\"\r\n                    >\r\n                        <h2 className=\"margin-0 text-align-center font-16px text-white\">\r\n                            Sign up\r\n                        </h2>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n\r\n            <div\r\n                className={`pos-fixed-100 z-index-lv5 bg-s-through ${\r\n                    is_fetching ? '' : 'display-none'\r\n                }`}\r\n            >\r\n                <div className=\"pos-abs-center\">\r\n                    <FetchingThreeDot is_fetching={is_fetching} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}