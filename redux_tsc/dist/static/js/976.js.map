{"version":3,"sources":["webpack://redux_tsc/./src/_icons/eye_pass/IconEyePass.tsx","webpack://redux_tsc/./src/_utils/makeFormData.ts","webpack://redux_tsc/./src/components/fetching/three_dot/FetchingThreeDot.tsx","webpack://redux_tsc/./src/components/input/not_valid/input_not_valid/InputNotValid.tsx","webpack://redux_tsc/./src/components/input/not_valid/input_not_valid_pass/InputNotValidPass.tsx","webpack://redux_tsc/./src/pages/login/_initial/LoginInitial.ts","webpack://redux_tsc/./src/pages/login/_main/Login.tsx"],"names":["IconEye","size_icon","close_eye","className","height","width","viewBox","stroke","fill","strokeLinecap","d","strokeWidth","cx","cy","r","x1","y1","x2","y2","makeFormData","data","formData","FormData","key","Array","isArray","item","append","FetchingThreeDot","is_fetching","InPutNotValid","name","value","type","placeholder","max_length","handleChange","useState","is_focus","setIsFocus","maxLength","onChange","onFocus","onBlur","InputNotValidPass","password","setType","onClick","login_initial_arr","title","Login","props","use_history","useHistory","setDataUser","React","context_api","username","is_wrong","login_state","setLoginState","loginRequest","res","push","console","log","e","target","autoComplete","onSubmit","preventDefault","login","slice","map","ix","to"],"mappings":"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","file":"static/js/976.js","sourcesContent":["import * as React from 'react';\r\n\r\n// import './IconsEye.scss';\r\n\r\nexport interface IIconsEyePops {\r\n    size_icon?: string;\r\n    close_eye: boolean;\r\n}\r\n\r\n//\r\nexport default function IconEye({\r\n    size_icon = '1.5rem',\r\n    close_eye,\r\n}: IIconsEyePops) {\r\n    //\r\n    return (\r\n        <svg\r\n            className=\"IconEye\"\r\n            height={size_icon}\r\n            width={size_icon}\r\n            viewBox={`200 200 200 200`}\r\n            stroke=\"var(--black-brown)\"\r\n            fill=\"var(--black-brown)\"\r\n            strokeLinecap=\"round\"\r\n        >\r\n            {/* Eye for showing password x=200 y=200 Toggle:close_eye */}\r\n            <path\r\n                d=\"M200,300 Q300,200 400,300 Q300,400 200,300\"\r\n                fill=\"none\"\r\n                strokeWidth=\"10\"\r\n            />\r\n            <circle\r\n                className={close_eye ? 'display-none' : ''}\r\n                cx=\"300\"\r\n                cy=\"300\"\r\n                r=\"30\"\r\n            />\r\n            <g className={close_eye ? '' : 'display-none'}>\r\n                <path\r\n                    d=\"M200,300 Q300,350 400,300\"\r\n                    fill=\"none\"\r\n                    strokeWidth=\"20\"\r\n                />\r\n                <line x1=\"210\" y1=\"210\" x2=\"390\" y2=\"390\" strokeWidth=\"30\" />\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n","//\r\nexport function makeFormData(data: any) {\r\n    const formData = new FormData();\r\n\r\n    for (const key in data) {\r\n        if (Array.isArray(data[key])) {\r\n            for (const item of data[key]) {\r\n                formData.append(key, item);\r\n            }\r\n        } else {\r\n            formData.append(key, data[key]);\r\n        }\r\n    }\r\n\r\n    return formData;\r\n}\r\n","import * as React from 'react';\r\n//\r\nimport './FetchingThreeDot.scss';\r\n\r\n// \r\nexport interface IFetchingThreeDotProps {\r\n    is_fetching: boolean;\r\n}\r\n\r\n// \r\nexport default function FetchingThreeDot({\r\n    is_fetching = false,\r\n}: IFetchingThreeDotProps) {\r\n    // \r\n    return (\r\n        <div\r\n            className={\r\n                is_fetching ? 'FetchingThreeDot display-flex' : 'display-none'\r\n            }\r\n        >\r\n            <div className=\"FetchingThreeDot_item\" />\r\n            <div className=\"FetchingThreeDot_item\" />\r\n            <div className=\"FetchingThreeDot_item\" />\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\n//\r\nimport './InputNotValid.scss';\r\n\r\n//\r\nexport interface InPutNotValidProps_Common {\r\n    name: string;\r\n    placeholder: string;\r\n    max_length: number;\r\n    handleChange : React.ChangeEventHandler<HTMLInputElement>;\r\n}\r\n\r\n//\r\nexport interface InPutNotValidProps extends InPutNotValidProps_Common {\r\n    value: string;\r\n    type: string;\r\n}\r\n\r\nexport default function InPutNotValid({\r\n    name,\r\n    value,\r\n    type,\r\n    placeholder,\r\n    max_length,\r\n    handleChange,\r\n}: InPutNotValidProps) {\r\n    //\r\n    const [is_focus, setIsFocus] = useState(false);\r\n\r\n    //\r\n    function handleFocus() {\r\n        setIsFocus(true);\r\n    }\r\n\r\n    //\r\n    function handleBlur() {\r\n        setIsFocus(false);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div\r\n            className={`InputNotValid position-rel ${\r\n                value !== '' || is_focus\r\n                    ? 'InputNotValid_text input-active'\r\n                    : ''\r\n            }`}\r\n        >\r\n            <input\r\n                className=\"InputNotValid_input brs-5px\"\r\n                name={name}\r\n                type={type}\r\n                maxLength={max_length}\r\n                //\r\n                value={value}\r\n                onChange={handleChange}\r\n                //\r\n                onFocus={handleFocus}\r\n                onBlur={handleBlur}\r\n            />\r\n\r\n            <div\r\n                className={`InputNotValid_placeholder input-placeholder ${\r\n                    is_focus ? 'input-placeholder-active' : ''\r\n                }`}\r\n            >\r\n                {placeholder}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\n//\r\nimport IconEye from '../../../../_icons/eye_pass/IconEyePass';\r\n//\r\nimport InputNotValid, {\r\n    InPutNotValidProps_Common,\r\n} from '../input_not_valid/InputNotValid';\r\n//\r\nimport './InputNotValidPass.scss';\r\n\r\n//\r\nexport interface IInputNotValidPassProps extends InPutNotValidProps_Common {\r\n    password: string;\r\n}\r\n\r\n//\r\nexport default function InputNotValidPass({\r\n    password,\r\n    name,\r\n    placeholder,\r\n    max_length,\r\n\r\n    handleChange,\r\n}: IInputNotValidPassProps) {\r\n    //\r\n    const [type, setType] = useState('password');\r\n\r\n    //\r\n    function toggleType() {\r\n        setType(type == 'password' ? 'text' : 'password');\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"InputNotValidPass\">\r\n            <div>\r\n                <InputNotValid\r\n                    name={name}\r\n                    type={type}\r\n                    placeholder={placeholder}\r\n                    max_length={max_length}\r\n                    //\r\n                    value={password}\r\n                    handleChange={handleChange}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"InputNotValidPass_eye\">\r\n                <div\r\n                    className=\"InputNotValidPass_eye-contain hv-opacity\"\r\n                    onClick={toggleType}\r\n                >\r\n                    <IconEye close_eye={type == 'password'} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// \r\ntype _name = 'username' | 'password';\r\n\r\n//\r\ninterface _input_account_obj {\r\n    name: _name;\r\n    type: string;\r\n    placeholder: string;\r\n    title: string;\r\n    max_length: number;\r\n}\r\n\r\n//\r\nexport const login_initial_arr: _input_account_obj[] = [\r\n    {\r\n        name: 'username',\r\n        type: 'text',\r\n        placeholder: 'username',\r\n        title: 'Username',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'password',\r\n        type: 'password',\r\n        placeholder: 'password',\r\n        title: 'Password',\r\n        max_length: 15,\r\n    },\r\n];\r\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n//\r\nimport { context_api } from '../../../_context/ContextAPI';\r\n//\r\nimport { loginRequest } from '../../../_api/account/AccountAPI';\r\n//\r\nimport { makeFormData } from '../../../_utils/makeFormData';\r\n//\r\nimport InPutNotValid from '../../../components/input/not_valid/input_not_valid/InputNotValid';\r\nimport InputNotValidPass from '../../../components/input/not_valid/input_not_valid_pass/InputNotValidPass';\r\nimport FetchingThreeDot from '../../../components/fetching/three_dot/FetchingThreeDot';\r\n//\r\nimport { login_initial_arr } from '../_initial/LoginInitial';\r\n//\r\nimport './Login.scss';\r\n\r\n//\r\nexport interface ILoginProps {}\r\n\r\n//\r\nexport default function Login(props: ILoginProps) {\r\n    //\r\n    const use_history = useHistory();\r\n\r\n    //\r\n    const { setDataUser } = React.useContext(context_api);\r\n\r\n    //\r\n    const [login_state, setLoginState] = useState({\r\n        username: '',\r\n        password: '',\r\n        is_wrong: false,\r\n        is_fetching: false,\r\n    });\r\n\r\n    const { username, password, is_wrong } = login_state;\r\n\r\n    //\r\n    async function login() {\r\n        try {\r\n            setLoginState({\r\n                ...login_state,\r\n                is_fetching: true,\r\n            });\r\n\r\n            const res = await loginRequest(\r\n                makeFormData({\r\n                    username: username,\r\n                    password: password,\r\n                })\r\n            );\r\n\r\n            if (res.data == 'wrong') {\r\n                setLoginState({\r\n                    ...login_state,\r\n                    is_wrong: true,\r\n                    is_fetching: false,\r\n                });\r\n            } else {\r\n                setDataUser(res.data);\r\n                use_history.push('/chat');\r\n            }\r\n        } catch (er) {\r\n            console.log(er);\r\n        }\r\n    }\r\n\r\n    //\r\n    function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        setLoginState({\r\n            ...login_state,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    }\r\n\r\n    //\r\n    function handleSubmit(e: React.FormEvent<Element>) {\r\n        e.preventDefault();\r\n\r\n        login();\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"Login bg-linear-45-success-tear\">\r\n            <div className=\"Login_form margin-auto padding-8px brs-5px-md bg-react\">\r\n                <h2 className=\"Login_title margin-0 App_title\">Login</h2>\r\n\r\n                <div>\r\n                    {is_wrong ? (\r\n                        <div className=\"Login_error text-red\">\r\n                            Username or password was wrong\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n\r\n                <form autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <div>\r\n                        {login_initial_arr.slice(0, 2).map((item, ix) => (\r\n                            <div key={`${ix}`} className=\"Login_input\">\r\n                                {item.type == 'password' ? (\r\n                                    <InputNotValidPass\r\n                                        password={login_state[item.name]}\r\n                                        name={item.name}\r\n                                        placeholder={item.placeholder}\r\n                                        max_length={item.max_length}\r\n                                        handleChange={handleChange}\r\n                                    />\r\n                                ) : (\r\n                                    <InPutNotValid\r\n                                        value={login_state[item.name]}\r\n                                        name={item.name}\r\n                                        type={item.type}\r\n                                        placeholder={item.placeholder}\r\n                                        max_length={item.max_length}\r\n                                        handleChange={handleChange}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button\r\n                            className=\"Login_btn btn btn-hv btn-active w-100per brs-5px padding-8px\"\r\n                            type=\"submit\"\r\n                        >\r\n                            <h2 className=\"margin-0 font-16px text-white\">\r\n                                Login\r\n                            </h2>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n                <div className=\"Login_or text-align-center label-field\">or</div>\r\n\r\n                <div className=\"Login_register\">\r\n                    <div className=\"Login_register-btn\">\r\n                        <Link to=\"/register\">\r\n                            <div className=\"padding-8px brs-5px bg-green\">\r\n                                <h2 className=\"margin-0 text-align-center font-16px text-white\">\r\n                                    Sign up\r\n                                </h2>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                className={`pos-fixed-100 z-index-lv5 bg-s-through ${\r\n                    login_state.is_fetching ? '' : 'display-none'\r\n                }`}\r\n            >\r\n                <div className=\"pos-abs-center\">\r\n                    <FetchingThreeDot is_fetching={login_state.is_fetching} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}